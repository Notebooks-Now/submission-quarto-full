<sub-article article-type="notebook">
<front-stub>
<title-group>
<article-title>Visualization &amp; Figure Creation</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">0000-0002-0760-5497</contrib-id>
<name>
<surname>Purves</surname>
<given-names>Steve</given-names>
</name>
<string-name>Steve Purves</string-name>
</contrib>
</contrib-group>
</front-stub>

<body>
<sec id="main-timeline-figure">
  <title>Main Timeline Figure</title>
  <sec id="cell-12f72d64" specific-use="notebook-code">
  <code language="python">%matplotlib inline
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
sns.set_theme(style=&quot;whitegrid&quot;)</code>
  </sec>
  <sec id="cell-291dc1cc" specific-use="notebook-code">
  <code language="python">def make_category_columns(df):
    df['Depth'] = 'Shallow (&lt;18km)'
    df.loc[(df['Depth(km)'] &gt;= 18) &amp; (df['Depth(km)'] &lt;= 28), 'Depth'] = 'Interchange (18km&gt;x&gt;28km)'
    df.loc[df['Depth(km)'] &gt;= 28, 'Depth'] = 'Deep (&gt;28km)'
    
    df['Mag'] = 0
    df.loc[(df['Magnitude'] &gt;= 1) &amp; (df['Magnitude'] &lt;= 2), 'Mag'] = 1
    df.loc[(df['Magnitude'] &gt;= 2) &amp; (df['Magnitude'] &lt;= 3), 'Mag'] = 2
    df.loc[(df['Magnitude'] &gt;= 3) &amp; (df['Magnitude'] &lt;= 4), 'Mag'] = 3
    df.loc[(df['Magnitude'] &gt;= 4) &amp; (df['Magnitude'] &lt;= 5), 'Mag'] = 4    
    
    return df</code>
  </sec>
</sec>
<sec id="visualising-long-term-earthquake-data">
  <title>Visualising Long term earthquake data</title>
  <p>Data taken directly from the IGN Catalog and processed using the
  <ext-link ext-link-type="uri" xlink:href="data-screening.ipynb">data
  screening notebook</ext-link>.</p>
  <sec id="f48a68e0" specific-use="notebook-code">
  <code language="python">df_ign = pd.read_csv('../data/lapalma_ign.csv')
df_ign = make_category_columns(df_ign)
df_ign.head()</code>
  <sec id="f48a68e0-output-0" specific-use="notebook-output">
  <table-wrap>
    <table border="1">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Event</th>
          <th>Date</th>
          <th>Time</th>
          <th>Latitude</th>
          <th>Longitude</th>
          <th>Depth(km)</th>
          <th>Intensity</th>
          <th>Magnitude</th>
          <th>Type Mag</th>
          <th>Location</th>
          <th>DateTime</th>
          <th>Timestamp</th>
          <th>Swarm</th>
          <th>Phase</th>
          <th>Depth</th>
          <th>Mag</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td>0</td>
          <td>es2017eugju</td>
          <td>2017-03-09</td>
          <td>23:44:06</td>
          <td>28.5346</td>
          <td>-17.8349</td>
          <td>26.0</td>
          <td></td>
          <td>1.6</td>
          <td>4</td>
          <td>NE FUENCALIENTE DE LA PALMA.IL</td>
          <td>2017-03-09 23:44:06</td>
          <td>1489103046000000000</td>
          <td>0.0</td>
          <td>0</td>
          <td>Interchange (18km&gt;x&gt;28km)</td>
          <td>1</td>
        </tr>
        <tr>
          <td>1</td>
          <td>es2017euhlh</td>
          <td>2017-03-10</td>
          <td>00:16:10</td>
          <td>28.5491</td>
          <td>-17.8459</td>
          <td>27.0</td>
          <td></td>
          <td>2.0</td>
          <td>4</td>
          <td>N FUENCALIENTE DE LA PALMA.ILP</td>
          <td>2017-03-10 00:16:10</td>
          <td>1489104970000000000</td>
          <td>0.0</td>
          <td>0</td>
          <td>Interchange (18km&gt;x&gt;28km)</td>
          <td>2</td>
        </tr>
        <tr>
          <td>2</td>
          <td>es2017cpaoh</td>
          <td>2017-03-10</td>
          <td>00:16:11</td>
          <td>28.5008</td>
          <td>-17.8863</td>
          <td>20.0</td>
          <td></td>
          <td>2.1</td>
          <td>4</td>
          <td>W LOS CANARIOS.ILP</td>
          <td>2017-03-10 00:16:11</td>
          <td>1489104971000000000</td>
          <td>0.0</td>
          <td>0</td>
          <td>Interchange (18km&gt;x&gt;28km)</td>
          <td>2</td>
        </tr>
        <tr>
          <td>3</td>
          <td>es2017eunnk</td>
          <td>2017-03-10</td>
          <td>03:20:26</td>
          <td>28.5204</td>
          <td>-17.8657</td>
          <td>30.0</td>
          <td></td>
          <td>1.6</td>
          <td>4</td>
          <td>NW FUENCALIENTE DE LA PALMA.IL</td>
          <td>2017-03-10 03:20:26</td>
          <td>1489116026000000000</td>
          <td>0.0</td>
          <td>0</td>
          <td>Deep (&gt;28km)</td>
          <td>1</td>
        </tr>
        <tr>
          <td>4</td>
          <td>es2017kajei</td>
          <td>2017-08-21</td>
          <td>02:06:55</td>
          <td>28.5985</td>
          <td>-17.7156</td>
          <td>0.0</td>
          <td></td>
          <td>1.6</td>
          <td>4</td>
          <td>E EL PUEBLO.ILP</td>
          <td>2017-08-21 02:06:55</td>
          <td>1503281215000000000</td>
          <td>0.0</td>
          <td>0</td>
          <td>Shallow (&lt;18km)</td>
          <td>1</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  </sec>
  </sec>
  <sec id="cell-59c54f01" specific-use="notebook-code">
  <code language="python">df_ign['DateTime'] = pd.to_datetime(df_ign['Date'] + ' ' + df_ign['Time'])
df_ign['DateTime']</code>
  <sec id="59c54f01-output-0" specific-use="notebook-output">
  <preformat>0       2017-03-09 23:44:06
1       2017-03-10 00:16:10
2       2017-03-10 00:16:11
3       2017-03-10 03:20:26
4       2017-08-21 02:06:55
                ...        
11342   2022-09-14 00:20:51
11343   2022-09-14 01:40:30
11344   2022-09-14 01:44:52
11345   2022-09-14 02:03:08
11346   2022-09-14 03:58:59
Name: DateTime, Length: 11347, dtype: datetime64[ns]</preformat>
  </sec>
  </sec>
  <sec id="f7731cea" specific-use="notebook-code">
  <code language="python">df_ign_early = df_ign[df_ign['DateTime'] &lt; '2021-09-11']
df_ign_pre = df_ign[(df_ign['DateTime'] &gt;= '2021-09-11')&amp;(df_ign['DateTime'] &lt; '2021-09-19 14:13:00')]
df_ign_phase1 = df_ign[(df_ign['DateTime'] &gt;= '2021-09-19 14:13:00')&amp;(df_ign['DateTime'] &lt; '2021-10-01')]
df_ign_phase2 = df_ign[(df_ign['DateTime'] &gt;= '2021-10-01')&amp;(df_ign['DateTime'] &lt; '2021-12-01')]
df_ign_phase3 = df_ign[(df_ign['DateTime'] &gt;= '2021-12-01')&amp;(df_ign['DateTime'] &lt;= '2021-12-31')]

df_erupt = df_ign[(df_ign['Date'] &lt; '2022-01-01') &amp; (df_ign['Date'] &gt; '2021-09-11')]

df_erupt_1 = df_erupt[df_erupt['Magnitude'] &lt; 1.0]
df_erupt_2 = df_erupt[(df_erupt['Magnitude'] &gt;= 1.0)&amp;(df_erupt['Magnitude'] &lt; 2.0)]
df_erupt_3 = df_erupt[(df_erupt['Magnitude'] &gt;= 2.0)&amp;(df_erupt['Magnitude'] &lt; 3.0)]
df_erupt_4 = df_erupt[(df_erupt['Magnitude'] &gt;= 3.0)&amp;(df_erupt['Magnitude'] &lt; 4.0)]
df_erupt_5 = df_erupt[df_erupt['Magnitude'] &gt; 4.0]</code>
  </sec>
  <sec id="cell-fig-timeline" specific-use="notebook-code">
  <code language="python">from matplotlib.patches import Rectangle

import datetime as dt
from matplotlib.dates import date2num, num2date

matplotlib.rcParams['font.sans-serif'] = &quot;Helvetica&quot;
matplotlib.rcParams['font.family'] = &quot;sans-serif&quot;
matplotlib.rcParams['xtick.labelsize'] = 14
matplotlib.rcParams['ytick.labelsize'] = 14
matplotlib.rcParams['ytick.labelleft'] = True
matplotlib.rcParams['ytick.labelright'] = True

fig = matplotlib.pyplot.figure(figsize=(24,12), dpi=300)
fig.tight_layout()
# Creating axis
# add_axes([xmin,ymin,dx,dy])
ax_min = fig.add_axes([0.01, 0.01, 0.01, 0.01])
ax_min.axis('off')
ax_max = fig.add_axes([0.99, 0.99, 0.01, 0.01])
ax_max.axis('off')

ax_timeline = fig.add_axes([0.04, 0.1, 0.92, 0.85])
ax_timeline.spines[&quot;top&quot;].set_visible(False)
ax_timeline.spines[&quot;right&quot;].set_visible(False)
ax_timeline.spines[&quot;left&quot;].set_visible(False)
ax_timeline.grid(axis='x')


ax_timeline.axvline(x=dt.datetime(2021, 9, 19, 14, 13), ymin=0.075, ymax=0.98, color='r', linewidth=3)


def make_scatter(df, c, alpha=0.8):
    M = 3*np.exp2(1.3*df['Magnitude'])
    return ax_timeline.scatter(df['DateTime'], df['Depth(km)'], s=M, c=c, alpha=alpha, edgecolor='black', linewidth=0.5, zorder=2);

points_1 = make_scatter(df_erupt_1, c=[(0.890, 0.466, 0.760)], alpha=0.3)
points_2 = make_scatter(df_erupt_2, c=[(0.737, 0.741, 0.133)], alpha=0.4)
points_3 = make_scatter(df_erupt_3, c=[(0.172, 0.627, 0.172)], alpha=0.5)
points_4 = make_scatter(df_erupt_4, c=[(1.000, 0.498, 0.054)], alpha=0.6)
points_5 = make_scatter(df_erupt_5, c=[(0.839, 0.152, 0.156)], alpha=0.8)

ax_timeline.tick_params(axis='x', labelrotation=0, bottom=True)
ax_timeline.set_ylabel('')
ax_timeline.yaxis.set_ticks_position('both')
ax_timeline.yaxis.set_ticks_position('both')

xticks = ax_timeline.get_xticks()
new_xticks = [date2num(pd.to_datetime('2021-09-11')),
    date2num(pd.to_datetime('2021-09-19 14:13:00'))]
new_xticks = np.append(new_xticks, xticks[2:-1])
ax_timeline.set_xticks(new_xticks)

ax_timeline.invert_yaxis()
ax_timeline.spines['bottom'].set_position(('data', 45))
ax_timeline.margins(tight=True, x=0)
ax_timeline.legend(
    [points_1, points_2, points_3, points_4, points_5],
    ['0 &lt; M &lt;= 1','1 &lt; M &lt;= 2','2 &lt; M &lt;= 3','3 &lt; M &lt;= 4','M &gt; 4'],
    loc='lower left', bbox_to_anchor=(0.01, 0.1, 0.15, 0.1), fancybox=True,
    borderpad=1.0, labelspacing=1, mode=&quot;expand&quot;, title=&quot;Event Magnitude (M)&quot;,
    fontsize=14, title_fontsize=14, framealpha=1)

ax_timeline.set_ylim(ax_timeline.get_ylim()[0], -9)

plt.annotate('ERUPTION', (0.055, 0.42), rotation=90, xycoords='axes fraction', fontweight='bold', fontsize=20, color='r')
plt.annotate('Pre\nEruptive\nSwarm', (0.035, 0.88), rotation=0, xycoords='axes fraction', fontweight='bold', fontsize=20, color='b', horizontalalignment='center')
plt.annotate('Early Eruptive\nPhase', (0.12, 0.9), rotation=0, xycoords='axes fraction', fontweight='bold', fontsize=20, color='orange', horizontalalignment='center')
plt.annotate('Main Eruptive Phase\n(sustained gas and lava ejection)', (0.45, 0.9), rotation=0, xycoords='axes fraction', fontweight='bold', fontsize=20, color='green', horizontalalignment='center')
plt.annotate('Final Eruptive Phase\n(reducing gas and lava ejection)', (0.86, 0.9), rotation=0, xycoords='axes fraction', fontweight='bold', fontsize=20, color='r', horizontalalignment='center')

ax_timeline.add_patch(Rectangle((date2num(pd.to_datetime('2021-09-11')), -8), date2num(pd.to_datetime('2021-09-19 14:13:00'))-date2num(pd.to_datetime('2021-09-11')), 53, color=(0.121, 0.466, 0.705), zorder=1, alpha=0.1))
ax_timeline.add_patch(Rectangle((date2num(pd.to_datetime('2021-09-19 14:13:00')), -8), date2num(pd.to_datetime('2021-10-01'))-date2num(pd.to_datetime('2021-09-19 14:13:00')), 53, color=(1.000, 0.498, 0.055), zorder=1, alpha=0.1))
ax_timeline.add_patch(Rectangle((date2num(pd.to_datetime('2021-10-01')), -8), date2num(pd.to_datetime('2021-12-01'))-date2num(pd.to_datetime('2021-10-01')), 53, color=(0.173, 0.627, 0.172), zorder=1, alpha=0.1))
ax_timeline.add_patch(Rectangle((date2num(pd.to_datetime('2021-12-01')), -8), date2num(pd.to_datetime('2021-12-31'))-date2num(pd.to_datetime('2021-12-01'))+1, 53, color=(0.839, 0.152, 0.156), zorder=1, alpha=0.1));

ax_timeline.set_title(&quot;Recorded seismicity during the La Palma eruption 11 September - 15 December 2021 (INVOLCAN Dataset)&quot;, dict(fontsize=24), pad=20)
ax_timeline.set_ylabel(&quot;Depth (km)&quot;, dict(fontsize=20), labelpad=20)
ax_timeline.set_xlabel(&quot;Eruption Timeline&quot;, dict(fontsize=20), labelpad=20);</code>
  <sec id="cell-fig-timeline-output-0" specific-use="notebook-output">
  <fig id="fig-timeline">
    <caption><p>Figure 1: Earthquake data over time (n=5465) to
    understand their distributions spatially, by depth, by magnitude and
    in time.</p></caption>
    <graphic mimetype="image" mime-subtype="png" xlink:href="visualization-figure-creation-seaborn_files/figure-jats/fig-timeline-output-1.png" />
  </fig>
  </sec>
  </sec>
</sec>
<sec id="cumulative-distrubtion-plots">
  <title>Cumulative Distrubtion Plots</title>
  <sec id="abbf0d50" specific-use="notebook-code">
  <code language="python">def cumulative_events_mag_depth(df, hue='Depth', kind='scatter', ax=None, dpi=300, palette=None, kde=True):
    matplotlib.rcParams['ytick.labelright'] = False
    g = sns.jointplot(x=&quot;Magnitude&quot;, y=&quot;Depth(km)&quot;, data=df,
                      kind=kind, hue=hue, height=10, space=0.1, marginal_ticks=False, ratio=8, alpha=0.6,
                      hue_order=['Shallow (&lt;18km)', 'Interchange (18km&gt;x&gt;28km)', 'Deep (&gt;28km)'],
                      ax=ax, palette=palette, ylim=(-2,50), xlim=(0.3,5.6), edgecolor=&quot;.2&quot;, marginal_kws=dict(bins=20))
    if kde:
        g.plot_joint(sns.kdeplot, color=&quot;b&quot;, zorder=1, levels=15, ax=ax)
    g.fig.axes[0].invert_yaxis();
    g.fig.set_dpi(dpi)</code>
  </sec>
  <sec id="cell-9fc0146a" specific-use="notebook-code">
  <code language="python">cumulative_events_mag_depth(df_ign, hue=None)
plt.suptitle('Cumulative Events 01-01-2017 to 01-01-2022', y=1.01);</code>
  <sec id="9fc0146a-output-0" specific-use="notebook-output">
  <graphic mimetype="image" mime-subtype="png" xlink:href="visualization-figure-creation-seaborn_files/figure-jats/cell-9-output-1.png" />
  </sec>
  </sec>
  <sec id="b1fc42cc" specific-use="notebook-code">
  <code language="python">cumulative_events_mag_depth(df_ign_early, hue=None)
plt.suptitle(f'Events prior to 2021-09-11 ({len(df_ign_early.index)} events)', y=1.01);</code>
  <sec id="b1fc42cc-output-0" specific-use="notebook-output">
  <graphic mimetype="image" mime-subtype="png" xlink:href="visualization-figure-creation-seaborn_files/figure-jats/cell-10-output-1.png" />
  </sec>
  </sec>
  <sec id="cell-19e275d7" specific-use="notebook-code">
  <code language="python">cumulative_events_mag_depth(df_ign_pre, hue=None)
plt.suptitle(f&quot;Events Immediately before Eruption 11-19 September 2021 ({len(df_ign_pre.index)} events)&quot;, y=1.01);</code>
  <sec id="19e275d7-output-0" specific-use="notebook-output">
  <graphic mimetype="image" mime-subtype="png" xlink:href="visualization-figure-creation-seaborn_files/figure-jats/cell-11-output-1.png" />
  </sec>
  </sec>
  <sec id="cell-4bcecbd4" specific-use="notebook-code">
  <code language="python">cumulative_events_mag_depth(df_ign_phase1, hue=None)
plt.suptitle(f&quot;Events in Phase 1 of Eruption 2021-09-11 to 2021-09-30 ({len(df_ign_phase1.index)} events)&quot;, y=1.01);</code>
  <sec id="4bcecbd4-output-0" specific-use="notebook-output">
  <graphic mimetype="image" mime-subtype="png" xlink:href="visualization-figure-creation-seaborn_files/figure-jats/cell-12-output-1.png" />
  </sec>
  </sec>
  <sec id="cell-012f5878" specific-use="notebook-code">
  <code language="python">cumulative_events_mag_depth(df_ign_phase2, hue=None)
plt.suptitle(f&quot;Events in Phase 2 of Eruption 2021-10-01 to 2021-11-31 ({len(df_ign_phase2.index)} events)&quot;, y=1.01);</code>
  <sec id="012f5878-output-0" specific-use="notebook-output">
  <graphic mimetype="image" mime-subtype="png" xlink:href="visualization-figure-creation-seaborn_files/figure-jats/cell-13-output-1.png" />
  </sec>
  </sec>
  <sec id="cell-32e0996c" specific-use="notebook-code">
  <code language="python">cumulative_events_mag_depth(df_ign_phase3, hue=None)
plt.suptitle(f&quot;Events in Phase 3 of Eruption 2021-12-01 to 2021-12-31 ({len(df_ign_phase3.index)} events)&quot;, y=1.01);</code>
  <sec id="32e0996c-output-0" specific-use="notebook-output">
  <graphic mimetype="image" mime-subtype="png" xlink:href="visualization-figure-creation-seaborn_files/figure-jats/cell-14-output-1.png" />
  </sec>
  </sec>
</sec>
</body>



<back>
</back>


</sub-article>