#!/bin/bash -v

# determine the latest pre-release version
# TODO: make a more configurable version that can use release, pre-release, or pinned versions
RELEASE_JSON=$(curl https://quarto.org/docs/download/_prerelease.json)
VERSION=$(jq -r  '.version' <<< "${RELEASE_JSON}") 

echo
echo Installing Quarto $VERSION...
echo

# download and install the deb file
curl -LO https://github.com/quarto-dev/quarto-cli/releases/download/v$VERSION/quarto-$VERSION-linux-amd64.deb
dpkg -x quarto-$VERSION-linux-amd64.deb .quarto
rm -rf quarto-$VERSION-linux-amd64.deb

# get quarto in the path
mkdir -p ./.local/bin
ln -s ~/.quarto/opt/quarto/bin/quarto ~/.local/bin/quarto

# create the proper pandoc symlink to enable visual editor in Quarto extension
ln -s ~/.quarto/opt/quarto/bin/tools/x86_64/pandoc ~/.quarto/opt/quarto/bin/tools/pandoc

echo
echo Installed Quarto $VERSION...
echo

echo Installing TinyTex...
echo

# install tinytex if needed
quarto install tinytex --no-prompt

echo
echo Installed TinyTex...
echo

# TODO: install chromium if needed

echo Configuring VSCode...
echo

# download and install VS Code server
CODE_VERSION=4.16.1

# download and extract
wget -q -O code-server.tar.gz https://github.com/coder/code-server/releases/download/v$CODE_VERSION/code-server-$CODE_VERSION-linux-amd64.tar.gz
tar xzf code-server.tar.gz
rm -rf code-server.tar.gz

# place in hidden folder
mv "code-server-$CODE_VERSION-linux-amd64" .code-server

# get code-server in path
mkdir -p ./.local/bin
ln -s ~/.code-server/bin/code-server ~/.local/bin/code-server  

# install extensions
code-server --install-extension ms-python.python
code-server --install-extension sumneko.lua
code-server --install-extension quarto.quarto

echo
echo Configured VSCode...
echo

# enable the proxy extension in notebook and lab
# TODO: This one support JL4, but need to be sure we can support either
# TODO: need to do the same with installing the jupyter-quarto extension
python3 -m pip install git+https://github.com/trungleduc/jupyter-server-proxy@lab4
